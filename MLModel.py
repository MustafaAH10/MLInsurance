# -*- coding: utf-8 -*-
"""model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Eil6PhEPgl1OUaTOWOe8-VQpYzbnJe-_
"""

import numpy as np
import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.tree import plot_tree
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt

#we need to create some sample data in a csv format with parameters like age, race, gender, health history and then their respective policy tier
df = pd.read_csv("insurance_data.csv")
print(df)
X = df[['age', 'gender', 'race', 'income', 'smoker', 'alcohol', 'exercise', 'risk']]
y = df['policy_tier']

from google.colab import files
files.download('model.pkl')

import pickle
with open("model.pkl", "wb") as f:
    pickle.dump(clf, f)

#splitting the data into training and test data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

#training the model
clf = DecisionTreeClassifier()
clf.fit(X_train, y_train)

print(X_test)

y_pred = clf.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print("Accuracy of the prediction is:")
print(accuracy * 100)

print(y_pred)

plt.figure(figsize=(20,10))
plot_tree(clf, feature_names=['age', 'gender', 'race', 'income', 'smoker', 'alcohol', 'exercise', 'risk'], class_names=['1', '2', '3', '4', '5', '6', '7', '8'], filled=True);
plt.show()

new_customer = [[35, 0, 3, 5000, 0, 1, 2, 1]]

policy_tier = clf.predict(new_customer)

print("Recommended policy tier for new customer:", policy_tier[0])

# Group the customers by age group
age_groups = df.groupby("age")

# Calculate the proportion of customers in each age group that choose each policy tier
age_stats = age_groups["policy_tier"].value_counts(normalize=True)

# Print the statistics for the new customer's age group
age = new_customer[0][0]
print(age_stats[age])

# Count the number of customers in each age group
age_counts = df['age'].value_counts()

# Print the counts for the new customer's age group
age = new_customer[0][0]
print(age_counts[age])

df.groupby('age').size()

#creating a scatter plot of income vs policy_tier
plt.scatter(df['income'], df['policy_tier'])
plt.xlabel('Income')
plt.ylabel('Policy Tier')
plt.title('Income vs Policy Tier')

#overlaying a single point for new customer data
plt.scatter(new_customer[0][3], clf.predict(new_customer), c='red', marker='*', s=200)

plt.show()

